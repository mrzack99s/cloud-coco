basePath: /api
definitions:
  authentication.CredentialParams:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  authentication.TokenResponse:
    properties:
      access_token:
        type: string
      access_token_expires:
        type: string
      need_chpasswd:
        type: boolean
    type: object
  gin.H:
    additionalProperties: true
    type: object
  gorm.DeletedAt:
    properties:
      time:
        type: string
      valid:
        description: Valid is true if Time is not NULL
        type: boolean
    type: object
  models.Directories:
    properties:
      created_at:
        type: string
      deleted_at:
        $ref: '#/definitions/gorm.DeletedAt'
      disabled:
        type: boolean
      id:
        type: integer
      name:
        type: string
      subscriptions:
        items:
          $ref: '#/definitions/models.Subscriptions'
        type: array
      updated_at:
        type: string
      users:
        items:
          $ref: '#/definitions/models.DirectoriesUsers'
        type: array
      uuid:
        type: string
    type: object
  models.DirectoriesUsers:
    properties:
      directory:
        $ref: '#/definitions/models.Directories'
      directory_id:
        type: integer
      user_id:
        type: integer
      users:
        $ref: '#/definitions/models.Users'
    type: object
  models.Permissions:
    properties:
      created_at:
        type: string
      deleted_at:
        $ref: '#/definitions/gorm.DeletedAt'
      id:
        type: integer
      name:
        type: string
      permissions:
        items:
          $ref: '#/definitions/models.RolesPermissions'
        type: array
      updated_at:
        type: string
      uuid:
        type: string
    type: object
  models.RBACResourcePools:
    properties:
      resource_pool:
        $ref: '#/definitions/models.ResourcePools'
      resource_pool_id:
        type: integer
      role:
        $ref: '#/definitions/models.Roles'
      role_id:
        type: integer
      user:
        $ref: '#/definitions/models.Users'
      user_id:
        type: integer
    type: object
  models.RBACSubscriptions:
    properties:
      role:
        $ref: '#/definitions/models.Roles'
      role_id:
        type: integer
      subscription:
        $ref: '#/definitions/models.Subscriptions'
      subscription_id:
        type: integer
      user:
        $ref: '#/definitions/models.Users'
      user_id:
        type: integer
    type: object
  models.ResourcePools:
    properties:
      created_at:
        type: string
      deleted_at:
        $ref: '#/definitions/gorm.DeletedAt'
      id:
        type: integer
      name:
        type: string
      rbac:
        items:
          $ref: '#/definitions/models.RBACResourcePools'
        type: array
      resources:
        items:
          $ref: '#/definitions/models.Resources'
        type: array
      subscription:
        $ref: '#/definitions/models.Subscriptions'
      subscription_id:
        type: string
      updated_at:
        type: string
      uuid:
        type: string
    type: object
  models.Resources:
    properties:
      created_at:
        type: string
      deleted_at:
        $ref: '#/definitions/gorm.DeletedAt'
      id:
        type: integer
      name:
        type: string
      resource_pool:
        $ref: '#/definitions/models.ResourcePools'
      resource_pool_id:
        type: integer
      resource_status:
        $ref: '#/definitions/models.ResourcesStatus'
      resource_status_id:
        type: integer
      service:
        $ref: '#/definitions/models.ServiceVersions'
      service_id:
        type: string
      updated_at:
        type: string
      uuid:
        type: string
    type: object
  models.ResourcesStatus:
    properties:
      created_at:
        type: string
      deleted_at:
        $ref: '#/definitions/gorm.DeletedAt'
      id:
        type: integer
      name:
        type: string
      resources:
        items:
          $ref: '#/definitions/models.Resources'
        type: array
      updated_at:
        type: string
      uuid:
        type: string
    type: object
  models.Roles:
    properties:
      created_at:
        type: string
      deleted_at:
        $ref: '#/definitions/gorm.DeletedAt'
      id:
        type: integer
      name:
        type: string
      permissions:
        items:
          $ref: '#/definitions/models.RolesPermissions'
        type: array
      rbac_resource_pools:
        items:
          $ref: '#/definitions/models.RBACResourcePools'
        type: array
      rbac_subscriptions:
        items:
          $ref: '#/definitions/models.RBACSubscriptions'
        type: array
      updated_at:
        type: string
      uuid:
        type: string
    type: object
  models.RolesPermissions:
    properties:
      permission:
        $ref: '#/definitions/models.Permissions'
      permission_id:
        type: integer
      role:
        $ref: '#/definitions/models.Roles'
      role_id:
        type: integer
    type: object
  models.ServiceVersions:
    properties:
      created_at:
        type: string
      deleted_at:
        $ref: '#/definitions/gorm.DeletedAt'
      id:
        type: integer
      image:
        type: string
      resources:
        items:
          $ref: '#/definitions/models.Resources'
        type: array
      service:
        $ref: '#/definitions/models.Services'
      service_id:
        type: integer
      updated_at:
        type: string
      uuid:
        type: string
      version:
        type: string
    type: object
  models.Services:
    properties:
      created_at:
        type: string
      deleted_at:
        $ref: '#/definitions/gorm.DeletedAt'
      id:
        type: integer
      name:
        type: string
      updated_at:
        type: string
      uuid:
        type: string
      versions:
        items:
          $ref: '#/definitions/models.ServiceVersions'
        type: array
    type: object
  models.Subscriptions:
    properties:
      created_at:
        type: string
      deleted_at:
        $ref: '#/definitions/gorm.DeletedAt'
      directory:
        $ref: '#/definitions/models.Directories'
      directory_id:
        type: integer
      disabled:
        type: boolean
      id:
        type: integer
      name:
        type: string
      rbac:
        items:
          $ref: '#/definitions/models.RBACSubscriptions'
        type: array
      resource_pools:
        items:
          $ref: '#/definitions/models.ResourcePools'
        type: array
      updated_at:
        type: string
      uuid:
        type: string
    type: object
  models.Users:
    properties:
      created_at:
        type: string
      deleted_at:
        $ref: '#/definitions/gorm.DeletedAt'
      directories:
        items:
          $ref: '#/definitions/models.DirectoriesUsers'
        type: array
      email:
        type: string
      first_name:
        type: string
      id:
        type: integer
      last_name:
        type: string
      need_chpasswd:
        type: boolean
      passwd_checksum:
        type: string
      rbac_resource_pools:
        items:
          $ref: '#/definitions/models.RBACResourcePools'
        type: array
      rbac_subscriptions:
        items:
          $ref: '#/definitions/models.RBACSubscriptions'
        type: array
      temporary_password:
        type: string
      updated_at:
        type: string
      uuid:
        type: string
    type: object
  types.ArrayResponse:
    properties:
      record_count:
        type: integer
      record_list: {}
    type: object
  types.SetupParams:
    properties:
      email:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      password:
        type: string
    type: object
  types.UserChangePasswdParams:
    properties:
      new_password:
        type: string
      old_password:
        type: string
      uuid:
        type: integer
    type: object
  types.UserResetPasswdParams:
    properties:
      uuid:
        type: string
    type: object
info:
  contact: {}
  description: This is a Cloud COCO API
  license:
    name: Apache License Version 2.0
    url: https://github.com/mrzack99s/cloud-coco
  title: Cloud COCO
  version: 0.1.0
paths:
  /authentication/check-credential:
    post:
      consumes:
      - application/json
      description: Check credential for get access
      operationId: check-credential
      parameters:
      - description: Parameters
        in: body
        name: params
        required: true
        schema:
          $ref: '#/definitions/authentication.CredentialParams'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/authentication.TokenResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Check credential
      tags:
      - Authentication
  /authentication/get-credential:
    get:
      consumes:
      - application/json
      description: Revoke token
      operationId: get-credential
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Users'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      security:
      - ApiKeyAuth: []
      summary: Revoke token
      tags:
      - Authentication
  /authentication/revoke-token:
    get:
      consumes:
      - application/json
      description: Revoke token
      operationId: revoke-token
      produces:
      - application/json
      responses:
        "200":
          description: Revoked
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      security:
      - ApiKeyAuth: []
      summary: Revoke token
      tags:
      - Authentication
  /directories/create:
    post:
      consumes:
      - application/json
      description: Create Directories
      operationId: create-directories
      parameters:
      - description: Parameters
        in: body
        name: params
        required: true
        schema:
          $ref: '#/definitions/models.Directories'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Directories'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      security:
      - ApiKeyAuth: []
      summary: Create Directories
      tags:
      - Directories
  /directories/get-by-offset:
    get:
      description: Get Directories by offset
      operationId: get-directories-by-offset
      parameters:
      - description: Offset
        in: query
        name: offset
        required: true
        type: integer
      - description: Limit
        in: query
        name: limit
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.ArrayResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      security:
      - ApiKeyAuth: []
      summary: Get Directories by offset
      tags:
      - Directories
  /directories/get/{uuid}:
    get:
      description: Get Directories by uuid
      operationId: get-directories-by-uuid
      parameters:
      - description: UUID
        in: path
        name: uuid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Directories'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      security:
      - ApiKeyAuth: []
      summary: Get Directories by uuid
      tags:
      - Directories
  /directories/hard-delete/{uuid}:
    delete:
      description: Hard Delete Directories
      operationId: hard-delete-directories
      parameters:
      - description: Directories UUID
        in: path
        name: uuid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: deleted
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      security:
      - ApiKeyAuth: []
      summary: Hard Delete Directories
      tags:
      - Directories
  /directories/soft-delete/{uuid}:
    delete:
      description: Soft Delete Directories
      operationId: soft-delete-directories
      parameters:
      - description: Directories UUID
        in: path
        name: uuid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: deleted
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      security:
      - ApiKeyAuth: []
      summary: Soft Delete Directories
      tags:
      - Directories
  /directories/update:
    post:
      consumes:
      - application/json
      description: Update Directories
      operationId: update-directories
      parameters:
      - description: Parameters
        in: body
        name: params
        required: true
        schema:
          $ref: '#/definitions/models.Directories'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Directories'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      security:
      - ApiKeyAuth: []
      summary: Update Directories
      tags:
      - Directories
  /resource-pools/create:
    post:
      consumes:
      - application/json
      description: Create ResourcePools
      operationId: create-resource-pools
      parameters:
      - description: Parameters
        in: body
        name: params
        required: true
        schema:
          $ref: '#/definitions/models.ResourcePools'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResourcePools'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      security:
      - ApiKeyAuth: []
      summary: Create ResourcePools
      tags:
      - ResourcePools
  /resource-pools/get-by-offset:
    get:
      description: Get ResourcePools by offset
      operationId: get-resource-pools-by-offset
      parameters:
      - description: Offset
        in: query
        name: offset
        required: true
        type: integer
      - description: Limit
        in: query
        name: limit
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.ArrayResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      security:
      - ApiKeyAuth: []
      summary: Get ResourcePools by offset
      tags:
      - ResourcePools
  /resource-pools/get/{uuid}:
    get:
      description: Get ResourcePools by uuid
      operationId: get-resource-pools-by-uuid
      parameters:
      - description: UUID
        in: path
        name: uuid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResourcePools'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      security:
      - ApiKeyAuth: []
      summary: Get ResourcePools by uuid
      tags:
      - ResourcePools
  /resource-pools/hard-delete/{uuid}:
    delete:
      description: Hard Delete ResourcePools
      operationId: hard-delete-resource-pools
      parameters:
      - description: ResourcePools UUID
        in: path
        name: uuid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: deleted
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      security:
      - ApiKeyAuth: []
      summary: Hard Delete ResourcePools
      tags:
      - ResourcePools
  /resource-pools/soft-delete/{uuid}:
    delete:
      description: Soft Delete ResourcePools
      operationId: soft-delete-resource-pools
      parameters:
      - description: ResourcePools UUID
        in: path
        name: uuid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: deleted
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      security:
      - ApiKeyAuth: []
      summary: Soft Delete ResourcePools
      tags:
      - ResourcePools
  /resource-pools/update:
    post:
      consumes:
      - application/json
      description: Update ResourcePools
      operationId: update-resource-pools
      parameters:
      - description: Parameters
        in: body
        name: params
        required: true
        schema:
          $ref: '#/definitions/models.ResourcePools'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResourcePools'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      security:
      - ApiKeyAuth: []
      summary: Update ResourcePools
      tags:
      - ResourcePools
  /resources/create:
    post:
      consumes:
      - application/json
      description: Create Resources
      operationId: create-resources
      parameters:
      - description: Parameters
        in: body
        name: params
        required: true
        schema:
          $ref: '#/definitions/models.Resources'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Resources'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      security:
      - ApiKeyAuth: []
      summary: Create Resources
      tags:
      - Resources
  /resources/get-by-offset:
    get:
      description: Get Resources by offset
      operationId: get-resources-by-offset
      parameters:
      - description: Offset
        in: query
        name: offset
        required: true
        type: integer
      - description: Limit
        in: query
        name: limit
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.ArrayResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      security:
      - ApiKeyAuth: []
      summary: Get Resources by offset
      tags:
      - Resources
  /resources/get/{uuid}:
    get:
      description: Get Resources by uuid
      operationId: get-resources-by-uuid
      parameters:
      - description: UUID
        in: path
        name: uuid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Resources'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      security:
      - ApiKeyAuth: []
      summary: Get Resources by uuid
      tags:
      - Resources
  /resources/hard-delete/{uuid}:
    delete:
      description: Hard Delete Resources
      operationId: hard-delete-resources
      parameters:
      - description: Resources UUID
        in: path
        name: uuid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: deleted
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      security:
      - ApiKeyAuth: []
      summary: Hard Delete Resources
      tags:
      - Resources
  /resources/soft-delete/{uuid}:
    delete:
      description: Soft Delete Resources
      operationId: soft-delete-resources
      parameters:
      - description: Resources UUID
        in: path
        name: uuid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: deleted
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      security:
      - ApiKeyAuth: []
      summary: Soft Delete Resources
      tags:
      - Resources
  /resources/update:
    post:
      consumes:
      - application/json
      description: Update Resources
      operationId: update-resources
      parameters:
      - description: Parameters
        in: body
        name: params
        required: true
        schema:
          $ref: '#/definitions/models.Resources'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Resources'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      security:
      - ApiKeyAuth: []
      summary: Update Resources
      tags:
      - Resources
  /roles/create:
    post:
      consumes:
      - application/json
      description: Create Roles
      operationId: create-roles
      parameters:
      - description: Parameters
        in: body
        name: params
        required: true
        schema:
          $ref: '#/definitions/models.Roles'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Roles'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      security:
      - ApiKeyAuth: []
      summary: Create Roles
      tags:
      - Roles
  /roles/get-by-offset:
    get:
      description: Get Roles by offset
      operationId: get-roles-by-offset
      parameters:
      - description: Offset
        in: query
        name: offset
        required: true
        type: integer
      - description: Limit
        in: query
        name: limit
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.ArrayResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      security:
      - ApiKeyAuth: []
      summary: Get Roles by offset
      tags:
      - Roles
  /roles/get/{uuid}:
    get:
      description: Get Roles by uuid
      operationId: get-roles-by-uuid
      parameters:
      - description: UUID
        in: path
        name: uuid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Roles'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      security:
      - ApiKeyAuth: []
      summary: Get Roles by uuid
      tags:
      - Roles
  /roles/hard-delete/{uuid}:
    delete:
      description: Hard Delete Roles
      operationId: hard-delete-roles
      parameters:
      - description: Roles UUID
        in: path
        name: uuid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: deleted
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      security:
      - ApiKeyAuth: []
      summary: Hard Delete Roles
      tags:
      - Roles
  /roles/soft-delete/{uuid}:
    delete:
      description: Soft Delete Roles
      operationId: soft-delete-roles
      parameters:
      - description: Roles UUID
        in: path
        name: uuid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: deleted
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      security:
      - ApiKeyAuth: []
      summary: Soft Delete Roles
      tags:
      - Roles
  /roles/update:
    post:
      consumes:
      - application/json
      description: Update Roles
      operationId: update-roles
      parameters:
      - description: Parameters
        in: body
        name: params
        required: true
        schema:
          $ref: '#/definitions/models.Roles'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Roles'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      security:
      - ApiKeyAuth: []
      summary: Update Roles
      tags:
      - Roles
  /service-versions/create:
    post:
      consumes:
      - application/json
      description: Create ServiceVersions
      operationId: create-service-versions
      parameters:
      - description: Parameters
        in: body
        name: params
        required: true
        schema:
          $ref: '#/definitions/models.ServiceVersions'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ServiceVersions'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      security:
      - ApiKeyAuth: []
      summary: Create ServiceVersions
      tags:
      - ServiceVersions
  /service-versions/get-by-offset:
    get:
      description: Get ServiceVersions by offset
      operationId: get-service-versions-by-offset
      parameters:
      - description: Offset
        in: query
        name: offset
        required: true
        type: integer
      - description: Limit
        in: query
        name: limit
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.ArrayResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      security:
      - ApiKeyAuth: []
      summary: Get ServiceVersions by offset
      tags:
      - ServiceVersions
  /service-versions/get-by-sid:
    get:
      description: Get ServiceVersions by sid
      operationId: get-service-versions-by-sid
      parameters:
      - description: ServiceID
        in: query
        name: sid
        required: true
        type: integer
      - description: Offset
        in: query
        name: offset
        required: true
        type: integer
      - description: Limit
        in: query
        name: limit
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.ArrayResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      security:
      - ApiKeyAuth: []
      summary: Get ServiceVersions by sid
      tags:
      - ServiceVersions
  /service-versions/get/{uuid}:
    get:
      description: Get ServiceVersions by uuid
      operationId: get-service-versions-by-uuid
      parameters:
      - description: UUID
        in: path
        name: uuid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ServiceVersions'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      security:
      - ApiKeyAuth: []
      summary: Get ServiceVersions by uuid
      tags:
      - ServiceVersions
  /service-versions/hard-delete/{uuid}:
    delete:
      description: Hard Delete ServiceVersions
      operationId: hard-delete-service-versions
      parameters:
      - description: Services UUID
        in: path
        name: uuid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: deleted
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      security:
      - ApiKeyAuth: []
      summary: Hard Delete ServiceVersions
      tags:
      - ServiceVersions
  /service-versions/soft-delete/{uuid}:
    delete:
      description: Soft Delete ServiceVersions
      operationId: soft-delete-service-versions
      parameters:
      - description: Services UUID
        in: path
        name: uuid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: deleted
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      security:
      - ApiKeyAuth: []
      summary: Soft Delete ServiceVersions
      tags:
      - ServiceVersions
  /service-versions/update:
    post:
      consumes:
      - application/json
      description: Update ServiceVersions
      operationId: update-service-versions
      parameters:
      - description: Parameters
        in: body
        name: params
        required: true
        schema:
          $ref: '#/definitions/models.ServiceVersions'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ServiceVersions'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      security:
      - ApiKeyAuth: []
      summary: Update ServiceVersions
      tags:
      - ServiceVersions
  /services/create:
    post:
      consumes:
      - application/json
      description: Create Services
      operationId: create-services
      parameters:
      - description: Parameters
        in: body
        name: params
        required: true
        schema:
          $ref: '#/definitions/models.Services'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Services'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      security:
      - ApiKeyAuth: []
      summary: Create Services
      tags:
      - Services
  /services/get-by-offset:
    get:
      description: Get Services by offset
      operationId: get-services-by-offset
      parameters:
      - description: Offset
        in: query
        name: offset
        required: true
        type: integer
      - description: Limit
        in: query
        name: limit
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.ArrayResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      security:
      - ApiKeyAuth: []
      summary: Get Services by offset
      tags:
      - Services
  /services/get/{uuid}:
    get:
      description: Get Services by uuid
      operationId: get-services-by-uuid
      parameters:
      - description: UUID
        in: path
        name: uuid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Services'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      security:
      - ApiKeyAuth: []
      summary: Get Services by uuid
      tags:
      - Services
  /services/hard-delete/{uuid}:
    delete:
      description: Hard Delete Services
      operationId: hard-delete-services
      parameters:
      - description: Services UUID
        in: path
        name: uuid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: deleted
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      security:
      - ApiKeyAuth: []
      summary: Hard Delete Services
      tags:
      - Services
  /services/soft-delete/{uuid}:
    delete:
      description: Soft Delete Services
      operationId: soft-delete-services
      parameters:
      - description: Services UUID
        in: path
        name: uuid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: deleted
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      security:
      - ApiKeyAuth: []
      summary: Soft Delete Services
      tags:
      - Services
  /services/update:
    post:
      consumes:
      - application/json
      description: Update Services
      operationId: update-services
      parameters:
      - description: Parameters
        in: body
        name: params
        required: true
        schema:
          $ref: '#/definitions/models.Services'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Services'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      security:
      - ApiKeyAuth: []
      summary: Update Services
      tags:
      - Services
  /setup:
    post:
      consumes:
      - application/json
      description: Setup system
      operationId: setup-system
      parameters:
      - description: Parameters
        in: body
        name: params
        required: true
        schema:
          $ref: '#/definitions/types.SetupParams'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Users'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      security:
      - ApiKeyAuth: []
      summary: Setup system
      tags:
      - Setup
  /subscriptions/create:
    post:
      consumes:
      - application/json
      description: Create Subscriptions
      operationId: create-subscriptions
      parameters:
      - description: Parameters
        in: body
        name: params
        required: true
        schema:
          $ref: '#/definitions/models.Subscriptions'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Subscriptions'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      security:
      - ApiKeyAuth: []
      summary: Create Subscriptions
      tags:
      - Subscriptions
  /subscriptions/get-by-offset:
    get:
      description: Get Subscriptions by offset
      operationId: get-subscriptions-by-offset
      parameters:
      - description: Offset
        in: query
        name: offset
        required: true
        type: integer
      - description: Limit
        in: query
        name: limit
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.ArrayResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      security:
      - ApiKeyAuth: []
      summary: Get Subscriptions by offset
      tags:
      - Subscriptions
  /subscriptions/get/{uuid}:
    get:
      description: Get Subscriptions by uuid
      operationId: get-subscriptions-by-uuid
      parameters:
      - description: UUID
        in: path
        name: uuid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Subscriptions'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      security:
      - ApiKeyAuth: []
      summary: Get Subscriptions by uuid
      tags:
      - Subscriptions
  /subscriptions/hard-delete/{uuid}:
    delete:
      description: Hard Delete Subscriptions
      operationId: hard-delete-subscriptions
      parameters:
      - description: Subscriptions UUID
        in: path
        name: uuid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: deleted
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      security:
      - ApiKeyAuth: []
      summary: Hard Delete Subscriptions
      tags:
      - Subscriptions
  /subscriptions/soft-delete/{uuid}:
    delete:
      description: Soft Delete Subscriptions
      operationId: soft-delete-subscriptions
      parameters:
      - description: Subscriptions UUID
        in: path
        name: uuid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: deleted
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      security:
      - ApiKeyAuth: []
      summary: Soft Delete Subscriptions
      tags:
      - Subscriptions
  /subscriptions/update:
    post:
      consumes:
      - application/json
      description: Update Subscriptions
      operationId: update-subscriptions
      parameters:
      - description: Parameters
        in: body
        name: params
        required: true
        schema:
          $ref: '#/definitions/models.Subscriptions'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Subscriptions'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      security:
      - ApiKeyAuth: []
      summary: Update Subscriptions
      tags:
      - Subscriptions
  /users/byo-password:
    post:
      consumes:
      - application/json
      description: BYO password Users
      operationId: byo-passwd-users
      parameters:
      - description: Parameters
        in: body
        name: params
        required: true
        schema:
          $ref: '#/definitions/types.UserChangePasswdParams'
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      security:
      - ApiKeyAuth: []
      summary: BYO password Users
      tags:
      - Users
  /users/change-password:
    post:
      consumes:
      - application/json
      description: Change password Users
      operationId: change-passwd-users
      parameters:
      - description: Parameters
        in: body
        name: params
        required: true
        schema:
          $ref: '#/definitions/types.UserChangePasswdParams'
      produces:
      - application/json
      responses:
        "200":
          description: changed
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      security:
      - ApiKeyAuth: []
      summary: Change password Users
      tags:
      - Users
  /users/create:
    post:
      consumes:
      - application/json
      description: Create Users
      operationId: create-users
      parameters:
      - description: Parameters
        in: body
        name: params
        required: true
        schema:
          $ref: '#/definitions/models.Users'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Users'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      security:
      - ApiKeyAuth: []
      summary: Create Users
      tags:
      - Users
  /users/get-by-offset:
    get:
      description: Get Users by offset
      operationId: get-users-by-offset
      parameters:
      - description: Offset
        in: query
        name: offset
        required: true
        type: integer
      - description: Limit
        in: query
        name: limit
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.ArrayResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      security:
      - ApiKeyAuth: []
      summary: Get Users by offset
      tags:
      - Users
  /users/get/{uuid}:
    get:
      description: Get Users by uuid
      operationId: get-users-by-uuid
      parameters:
      - description: UUID
        in: path
        name: uuid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Users'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      security:
      - ApiKeyAuth: []
      summary: Get Users by uuid
      tags:
      - Users
  /users/hard-delete/{uuid}:
    delete:
      description: Hard Delete Users
      operationId: hard-delete-users
      parameters:
      - description: Users UUID
        in: path
        name: uuid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: deleted
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      security:
      - ApiKeyAuth: []
      summary: Hard Delete Users
      tags:
      - Users
  /users/reset-password:
    post:
      consumes:
      - application/json
      description: Reset password Users
      operationId: reset-passwd-users
      parameters:
      - description: Parameters
        in: body
        name: params
        required: true
        schema:
          $ref: '#/definitions/types.UserResetPasswdParams'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Users'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      security:
      - ApiKeyAuth: []
      summary: Reset password Users
      tags:
      - Users
  /users/soft-delete/{uuid}:
    delete:
      description: Soft Delete Users
      operationId: soft-delete-users
      parameters:
      - description: Users UUID
        in: path
        name: uuid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: deleted
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      security:
      - ApiKeyAuth: []
      summary: Soft Delete Users
      tags:
      - Users
  /users/update:
    post:
      consumes:
      - application/json
      description: Update Users
      operationId: update-users
      parameters:
      - description: Parameters
        in: body
        name: params
        required: true
        schema:
          $ref: '#/definitions/models.Users'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Users'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      security:
      - ApiKeyAuth: []
      summary: Update Users
      tags:
      - Users
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: x-access-token
    type: apiKey
swagger: "2.0"
